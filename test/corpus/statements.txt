====================
Empty Statement
====================

{%%}
{% %}

---

(template
  (content)
  (ERROR)
  (content)
  (ERROR)
  (content))

====================
For Statement
====================

<h1>Members</h1>
<ul>
{%- for user in users %}
  <li>{{ user.username | e }}</li>
{%- endfor %}
</ul>

---

(template
  (content)
  (for_statement
    left: (identifier)
    right: (identifier)
    (content)
    (expression
      (filter
        object: (attribute
          object: (identifier)
          attribute: (identifier))
        filter: (identifier)))
    (content))
  (content))

====================
For Statement w/ Filter
====================

<dl>
{% for key, value in my_dict | dictsort %}
    <dt>{{ key|e }}</dt>
    <dd>{{ value|e }}</dd>
{% endfor %}
</dl>

---

(template
  (content)
  (for_statement
    left: (pattern_list
      (identifier)
      (identifier))
    right: (filter
      object: (identifier)
      filter: (identifier))
    (content)
    (expression
      (filter
        object: (identifier)
        filter: (identifier)))
    (content)
    (expression
      (filter
        object: (identifier)
        filter: (identifier)))
    (content))
  (content))

====================
For Statement w/ Sequence Filter
====================

{% for user in users if not user.hidden %}
    <li>{{ user.username | e }}</li>
{% endfor %}

---

(template
  (content)
  (for_statement
    left: (identifier)
    right: (identifier)
    condition: (not_operator
      argument: (attribute
        object: (identifier)
        attribute: (identifier)))
    (content)
    (expression
      (filter
        object: (attribute
          object: (identifier)
          attribute: (identifier))
        filter: (identifier)))
    (content))
  (content))


====================
For Statement w/ Recursive
====================

<ul class="sitemap">
{%- for item in sitemap recursive %}
    <li><a href="{{ item.href|e }}">{{ item.title }}</a>
    {%- if item.children -%}
        <ul class="submenu">{{ loop(item.children) }}</ul>
    {%- endif %}</li>
{%- endfor %}
</ul>

---

(template
  (content)
  (for_statement
    left: (identifier)
    right: (identifier)
    (content)
    (expression
      (filter
        object: (attribute
          object: (identifier)
          attribute: (identifier))
        filter: (identifier)))
    (content)
    (expression
      (attribute
        object: (identifier)
        attribute: (identifier)))
    (content)
    (if_statement
      condition: (attribute
        object: (identifier)
        attribute: (identifier))
      (content)
      (expression
        (call
          function: (identifier)
          arguments: (argument_list
            (attribute
              object: (identifier)
              attribute: (identifier)))))
      (content))
    (content))
  (content))

====================
For/Else Statement
====================

<ul>
{% for user in users %}
    <li>{{ user.username|e }}</li>
{% else %}
    <li><em>no users found</em></li>
{% endfor %}
</ul>

---

(template
  (content)
  (for_statement
    left: (identifier)
    right: (identifier)
    (content)
    (expression
      (filter
        object: (attribute
          object: (identifier)
          attribute: (identifier))
        filter: (identifier)))
    (content)
    (else_clause
      (content)))
  (content))

====================
If Statement
====================

{% if users %}
<h1>Content</h1>
{% endif %}

{% if users %}
<ul>
{% for user in users %}
    <li>{{ user.username | e }}</li>
{% endfor %}
</ul>
{% endif %}

---

(template
  (content)
  (if_statement
    condition: (identifier)
    (content))
  (content)
  (if_statement
    condition: (identifier)
    (content)
    (for_statement
      left: (identifier)
      right: (identifier)
      (content)
      (expression
        (filter
          object: (attribute
            object: (identifier)
            attribute: (identifier))
          filter: (identifier)))
      (content))
    (content))
  (content))

====================
If/Else Statement
====================

{% if kenny.sick %}
    Kenny is sick.
{% elif kenny.dead %}
    You killed Kenny!  You bastard!!!
{% endif %}

{% if kenny.sick %}
    Kenny is sick.
{% elif kenny.dead %}
    You killed Kenny!  You bastard!!!
{% else %}
    Kenny looks okay --- so far
{% endif %}

---

(template
  (content)
  (if_statement
    condition: (attribute
      object: (identifier)
      attribute: (identifier))
    (content)
    (elif_clause
      condition: (attribute
        object: (identifier)
        attribute: (identifier))
      (content)))
  (content)
  (if_statement
    condition: (attribute
      object: (identifier)
      attribute: (identifier))
    (content)
    (elif_clause
      condition: (attribute
        object: (identifier)
        attribute: (identifier))
      (content))
    (else_clause
      (content)))
  (content))


====================
Macro Statement
====================

{% macro input(name, value='', type='text', size=20) -%}
    <input type="{{ type }}" name="{{ name }}" value="{{
        value|e }}" size="{{ size }}">
{%- endmacro %}

<p>{{ input('username') }}</p>
<p>{{ input('password', type='password') }}</p>

---

(template
  (content)
  (macro_statement
    name: (identifier)
    parameters: (parameters
      (identifier)
      (default_parameter
        name: (identifier)
        value: (string
          (string_start)
          (string_end)))
      (default_parameter
        name: (identifier)
        value: (string
          (string_start)
          (string_content)
          (string_end)))
      (default_parameter
        name: (identifier)
        value: (integer)))
    (content)
    (expression
      (identifier))
    (content)
    (expression
      (identifier))
    (content)
    (expression
      (filter
        object: (identifier)
        filter: (identifier)))
    (content)
    (expression
      (identifier))
    (content))
  (content)
  (expression
    (call
      function: (identifier)
      arguments: (argument_list
        (string
          (string_start)
          (string_content)
          (string_end)))))
  (content)
  (expression
    (call
      function: (identifier)
      arguments: (argument_list
        (string
          (string_start)
          (string_content)
          (string_end))
        (keyword_argument
          name: (identifier)
          value: (string
            (string_start)
            (string_content)
            (string_end))))))
  (content))

====================
Call Statement
====================

{% call(user) dump_users(list_of_user) %}
    <dl>
        <dt>Realname</dt>
        <dd>{{ user.realname|e }}</dd>
        <dt>Description</dt>
        <dd>{{ user.description }}</dd>
    </dl>
{% endcall %}

---

(template
  (content)
  (call_statement
    parameters: (parameters
      (identifier))
    callable: (call
      function: (identifier)
      arguments: (argument_list
        (identifier)))
    (content)
    (expression
      (filter
        object: (attribute
          object: (identifier)
          attribute: (identifier))
        filter: (identifier)))
    (content)
    (expression
      (attribute
        object: (identifier)
        attribute: (identifier)))
    (content))
  (content))

====================
Filter Statement
====================

{% filter upper %}
    This text becomes uppercase
{% endfilter %}

{% filter center(100) %}Center this{% endfilter %}

---

(template
  (content)
  (filter_statement
    filter: (identifier)
    (content))
  (content)
  (filter_statement
    filter: (call
      function: (identifier)
      arguments: (argument_list
        (integer)))
    (content))
  (content))

====================
Set Statement
====================

{% set navigation = [('index.html', 'Index'), ('about.html', 'About')] %}
{% set key, value = call_something() %}

---

(template
  (content)
  (set_statement
    left: (identifier)
    right: (list
      (tuple
        (string
          (string_start)
          (string_content)
          (string_end))
        (string
          (string_start)
          (string_content)
          (string_end)))
      (tuple
        (string
          (string_start)
          (string_content)
          (string_end))
        (string
          (string_start)
          (string_content)
          (string_end)))))
  (content)
  (set_statement
    left: (pattern_list
      (identifier)
      (identifier))
    right: (call
      function: (identifier)
      arguments: (argument_list)))
  (content))

====================
Block Set Statement
====================

{% set navigation %}
    <li><a href="/">Index</a>
    <li><a href="/downloads">Downloads</a>
{% endset %}

{% set reply | wordwrap %}
    You wrote:
    {{ message }}
{% endset %}

---

(template
  (content)
  (set_statement
    variable: (identifier)
    (content))
  (content)
  (set_statement
    variable: (filter
      object: (identifier)
      filter: (identifier))
    (content)
    (expression
      (identifier))
    (content))
  (content))

====================
Nested Set Statement
====================

{%- for field in fields %}
  {%- set name = field.name %}
  {%- set type = field.type %}
  <span>{{ name }}</span>
  <span>{{ type }}</span>
{%- endfor %}

---

(template
  (content)
  (for_statement
    left: (identifier)
    right: (identifier)
    (content)
    (set_statement
      left: (identifier)
      right: (attribute
        object: (identifier)
        attribute: (identifier)))
    (content)
    (set_statement
      left: (identifier)
      right: (attribute
        object: (identifier)
        attribute: (identifier)))
      (content)
      (expression
        (identifier))
      (content)
      (expression
        (identifier))
      (content))
    (content))

====================
Block Statement
====================

{% extends "base.html" %}
{% block title %}Index{% endblock %}
{% block head %}
    {{ super() }}
    <style type="text/css">
        .important { color: #336699; }
    </style>
{% endblock %}
{% block content %}
    <h1>Index</h1>
    <p class="important">
      Welcome to my awesome homepage.
    </p>
{% endblock %}

---

(template
  (content)
  (extends_statement
    (string
      (string_start)
      (string_content)
      (string_end)))
  (content)
  (block_statement
    name: (identifier)
    (content))
  (content)
  (block_statement
    name: (identifier)
    (content)
    (expression
      (call
        function: (identifier)
        arguments: (argument_list)))
    (content))
  (content)
  (block_statement
    name: (identifier)
    (content))
  (content))

====================
Include Statement
====================

{% include "sidebar.html" %}
{% include "sidebar.html" without context %}
{% include "sidebar.html" ignore missing %}
{% include "sidebar.html" ignore missing with context %}
{% include "sidebar.html" ignore missing without context %}

---

(template
  (content)
  (include_statement
    (string
      (string_start)
      (string_content)
      (string_end)))
  (content)
  (include_statement
    (string
      (string_start)
      (string_content)
      (string_end)))
  (content)
  (include_statement
    (string
      (string_start)
      (string_content)
      (string_end)))
  (content)
  (include_statement
    (string
      (string_start)
      (string_content)
      (string_end)))
  (content)
  (include_statement
    (string
      (string_start)
      (string_content)
      (string_end)))
  (content))


====================
Import Statement
====================

{% import 'forms.html' as forms %}
{% from 'forms.html' import input as input_field, textarea %}

---

(template
  (content)
  (import_statement
    name: (aliased_import
      name: (string
        (string_start)
        (string_content)
        (string_end))
      alias: (identifier)))
  (content)
  (import_from_statement
    module_name: (string
      (string_start)
      (string_content)
      (string_end))
    name: (aliased_import
      name: (identifier)
      alias: (identifier))
    name: (identifier))
  (content))

====================
Raw Statement
====================

{% raw %}
    <ul>
    {% for item in seq %}
        <li>{{ item }}</li>
    {% endfor %}
    </ul>
    {% endraw }
{% endraw %}

{%- raw -%}
    <ul>
    {% for item in seq %}
        <li>{{ item }}</li>
    {% endfor %}
    </ul>
    {%- endraw }
{%- endraw -%}

---

(template
  (content)
  (raw_statement
    (raw_content))
  (content)
  (raw_statement
    (raw_content))
  (content))
